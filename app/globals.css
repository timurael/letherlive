@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 0%;
    --foreground: 0 0% 100%;
  }

  * {
    border-color: rgba(255, 255, 255, 0.1);
  }

  body {
    @apply bg-background text-foreground;
    font-feature-settings: "rlig" 1, "calt" 1;
  }

  ::selection {
    @apply bg-citrus text-black;
  }
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }

  .grain-overlay {
    position: relative;
  }

  .grain-overlay::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    opacity: 0.03;
    pointer-events: none;
    z-index: 1;
  }

  .glitch {
    position: relative;
  }

  .glitch::before,
  .glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .glitch::before {
    animation: glitch-1 0.3s infinite;
    color: #A3FF00;
    z-index: -1;
  }

  .glitch::after {
    animation: glitch-2 0.3s infinite;
    color: #FF006E;
    z-index: -2;
  }

  @keyframes glitch-1 {
    0% {
      clip-path: inset(20% 0 30% 0);
      transform: translate(-2px, -2px);
    }
    100% {
      clip-path: inset(10% 0 80% 0);
      transform: translate(2px, 2px);
    }
  }

  @keyframes glitch-2 {
    0% {
      clip-path: inset(50% 0 30% 0);
      transform: translate(2px, -2px);
    }
    100% {
      clip-path: inset(80% 0 5% 0);
      transform: translate(-2px, 2px);
    }
  }
}

.shimmer {
  background: linear-gradient(
    105deg,
    transparent 40%,
    rgba(163, 255, 0, 0.7) 50%,
    transparent 60%
  );
  background-size: 200% 100%;
  animation: shimmer 2s linear infinite;
}